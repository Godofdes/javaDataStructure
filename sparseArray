package com.txy.sparsearray;

public class SparseArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//创建一个原始的二维数组11*11
		//0表示没有棋子，1表示黑子，2表示白子
		int chessArr1[][] = new int [11][11];
		chessArr1[1][2] = 1;
		chessArr1[2][3] = 2;
		//输出原始二维数组
		System.out.println("二维数组");
		for(int[] row : chessArr1) {
			for(int data:row) {
				System.out.printf("%d\t", data);
			}
			System.out.println();
		}
		
		//转换为稀疏数组
		//记录非零数据个数
		int sum = 0;
		for(int i = 0; i < 11; i++) {
			for(int j = 0; j < 11; j++) {
				if(chessArr1[i][j] != 0) {
					sum++;
				}
			}
		}
		
		//创建稀疏数组
		int SparseArr[][] = new int[sum+1][3];
		SparseArr[0][0] = 11;
		SparseArr[0][1] = 11;
		SparseArr[0][2] = sum;
		
		for(int i = 0, k = 1; i < 11; i++) {
			for(int j = 0; j < 11; j++) {
				if(chessArr1[i][j] != 0) {
					SparseArr[k][0] = i;
					SparseArr[k][1] = j;
					SparseArr[k][2] = chessArr1[i][j];
					k++;
				}
			}
		}
		
		//输出稀疏数组
		System.out.println("稀疏数组");
		for(int[] row : SparseArr) {
			for(int data:row) {
				System.out.printf("%d\t", data);
			}
			System.out.println();
		}
		
		//将稀疏数组恢复为二维数组
		int chessrow = SparseArr[0][0];
		int chesscol = SparseArr[0][1];
		int rownum, colnum,num;
		int chessArray2[][] = new int[chessrow][chesscol];
		
		for(int i = 1; i < (sum+1); i++) {
			rownum = SparseArr[i][0];
			colnum = SparseArr[i][1];
			num = SparseArr[i][2];
			chessArray2[rownum][colnum] = num;
		}
		//输出还原数组
		System.out.println("还原数组");
		for(int[] row : chessArray2) { 
			for(int data:row) {
				System.out.printf("%d\t", data);
			}
			System.out.println();
		}
		
	}

}
